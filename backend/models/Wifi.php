<?php
/**
 * @package    http://www.rulaiyun.cn/
 * @author     wang <wangyaxu7019@dingtalk.com>
 * @copyright  Copyright &copy; rulaiyun.cn,2018 - 2019
 */

namespace backend\models;

use yii\db\ActiveRecord;

/**
 * This is the model class for table "rly_wifi".
 *
 * @property int    $id
 * @property string $user_id               注册推广员id
 * @property string $subsion_id            关注公众号id
 * @property string $image_id              图片广告id
 * @property string $video_id              视频广告id
 * @property string $name                  场所名称
 * @property string $describtion           说明
 * @property string $province              省
 * @property string $city                  市
 * @property string $area                  县
 * @property string $industry              行业
 * @property string $address               详细地址
 * @property string $SSID                  wifi名
 * @property string $password              wifi密码
 * @property int    $BSSID                 BSSID
 * @property int    $connect_times         连接次数
 * @property string $sign                  wifi签名
 * @property string $create_time           创建时间
 * @property string $update_time           更新时间
 */
class Wifi extends ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%wifi}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [
                [
                    'name',
                    'describtion',
                ],
                'required',
            ],
            [
                [
                    'SSID',
                    'password',
                    'address',
                    'sign',
                    'province',
                    'city',
                    'area',
                    'industry',
                    'connect_times',
                ],
                'safe'
            ]

//            [
//                ['mobile'],
//                'match',
//                'pattern' => '/^1[34578]\d{9}$/',
//            ],
        ];
    }

    /**获取昵称
     *
     * @param $user_id
     * @return string
     */
    public static function getUserNickName($user_id)
    {
        $user = self::findOne($user_id);
        return $user->nickname;
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => '场所名称',
            'describtion' => '说明',
            'province' => '省',
            'city' => '市',
            'area' => '县区',
            'industry' => '行业',
            'address' => '详细地址',
            'SSID' => 'SSID',
            'password' => 'wifi密码',
            'BSSID' => 'BSSID',
            'sign' => 'wifi签名',
            'connect_times' => '连接次数',
            'create_time' => '创建日期',
            'update_time' => '更新日期',
        ];
    }

    public function getVideo()
    {
        /**
         * 第一个参数为要关联的字表模型类名称，
         *第二个参数指定 通过子表的 wifi_id 去关联主表的 id 字段
         */
        return $this->hasMany(Video::className(), ['wifi_id' => 'id']);
    }

    public function getImage()
    {
        /**
         * 第一个参数为要关联的字表模型类名称，
         *第二个参数指定 通过子表的 wifi_id 去关联主表的 id 字段
         */
        return $this->hasMany(Image::className(), ['wifi_id' => 'id']);
    }

    public function getProvince()
    {
        /**
         * 第一个参数为要关联的字表模型类名称，
         *第二个参数指定 通过子表的 id 去关联主表的 province 字段
         */
        return $this->hasOne(Area::className(), ['id' => 'province']);
    }

    public function getCity()
    {
        /**
         * 第一个参数为要关联的字表模型类名称，
         *第二个参数指定 通过子表的 id 去关联主表的 city 字段
         */
        return $this->hasOne(Area::className(), ['id' => 'city']);
    }

    public function getArea()
    {
        /**
         * 第一个参数为要关联的字表模型类名称，
         *第二个参数指定 通过子表的 id 去关联主表的 area 字段
         */
        return $this->hasOne(Area::className(), ['id' => 'area']);
    }


    /**
     * @param bool $insert
     * @return bool
     * @author wang
     */
    public function beforeSave($insert)
    {
        if ($insert) {    //新增
            $this->create_time = date('Y-m-d H:i:s');
            $this->update_time = date('Y-m-d H:i:s');
        } else {    //修改
            $this->update_time = date('Y-m-d H:i:s');
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @param bool  $insert
     * @param array $changedAttributes
     * @author wang
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * 删除之后
     */
    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }


}
